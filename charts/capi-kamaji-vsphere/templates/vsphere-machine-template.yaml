{{/*
This creates vSphereMachineTemplate resources for each nodePool defined in values.yaml.

Context Passing Mechanism:
1. The range loop ({{- range .Values.nodePools }}) iterates through each nodePool.
2. Inside the loop, the context (.) changes to represent the current nodePool item.
3. We use (dict "nodePool" . "Global" $) to create a new context dictionary:
   - "nodePool": Contains the current nodePool item from the loop
   - "Global": Contains the root template context ($) with access to all values
4. This dictionary becomes the context (.) inside the included template

Example context being passed:
- .nodePool = Current nodePool object with properties like diskGiB, memoryMiB
- .Global = Root context with access to $.Values, $.Release, etc.

Inside the template, we can access:
- Node pool specific values: .nodePool.diskGiB
- Global values: .Global.Values.vSphere.dataCenter

The indent 6 ensures proper YAML formatting under spec.template.spec
*/}}

{{- range .Values.nodePools }}
---
kind: VSphereMachineTemplate
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
metadata:
  labels:
    cluster.x-k8s.io/cluster-name: {{ include "cluster-api-kamaji-vsphere.cluster-name" $ | quote }}
  name: {{ include "cluster-api-kamaji-vsphere.cluster-name" $ }}-{{ .name }}-vsphere-machine-template-{{ include "vSphereMachineTemplateHash" (dict "nodePool" . "Global" $) }}
  namespace: {{ $.Release.Namespace }}
spec:
  template:
    spec:
{{ include "vSphereMachineTemplateSpec" (dict "nodePool" . "Global" $) | indent 6 }}
{{- end }}